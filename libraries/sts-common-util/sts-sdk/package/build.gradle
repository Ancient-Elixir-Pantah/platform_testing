plugins {
    id 'com.android.application' version '7.2.1' apply false
    id 'com.android.library' version '7.2.1' apply false
}

task clean(type: Delete) {
    delete layout.buildDirectory
    delete project('native-poc').layout.projectDirectory.dir('.cxx')
}

ext.copyArtifacts = { nativeDir ->
    copy {
        from project('sts-test').layout.buildDirectory.file('testcases')
        from project('native-poc').layout.buildDirectory.file(nativeDir)
        from project('test-app').layout.buildDirectory.file('testcases')
        into layout.buildDirectory.dir('android-sts/testcases')
    }

    // TODO: figure out variants
    copy {
        from project('test-app').layout.buildDirectory.file('outputs/apk/debug')
        rename '(.*).apk', 'sts_test_app_package.apk'
        include '**/*.apk'
        into layout.buildDirectory.dir('android-sts/testcases')
    }

    copy {
        from project('sts-test').layout.projectDirectory.file('libs')
        into layout.buildDirectory.dir('android-sts/tools')
    }
}

task assembleStsARM {
    dependsOn ':sts-test:copyHostSideTest'
    dependsOn ':native-poc:copyarmeabi-v7a'
    dependsOn ':native-poc:copyarm64-v8a'
    dependsOn ':test-app:assemble'

    doLast {
        copyArtifacts('testcases_arm')
    }
}

task assembleStsx86 {
    dependsOn ':sts-test:copyHostSideTest'
    dependsOn ':native-poc:copyx86'
    dependsOn ':native-poc:copyx86_64'
    dependsOn ':test-app:assemble'

    doLast {
        copyArtifacts('testcases_x86')
    }
}


